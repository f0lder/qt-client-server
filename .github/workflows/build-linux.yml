name: Release Linux

on:
  push:
    tags:
      - 'v*'

jobs:
  build_release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install Qt and dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y qt6-base-dev qt6-base-dev-tools cmake g++ wget patchelf zip

      - name: Build Linux binaries
        run: |
          cmake -B build
          cmake --build build
          mkdir -p release
          cp -r bin release/linux-bin

      - name: Download linuxdeployqt
        run: |
          wget -O linuxdeployqt https://github.com/probonopd/linuxdeployqt/releases/download/continuous/linuxdeployqt-continuous-x86_64.AppImage
          chmod +x linuxdeployqt

      - name: Bundle MyQtApp as AppImage
        run: |
          ./linuxdeployqt bin/MyQtApp -appimage || true

      - name: Bundle ChatServer as AppImage
        run: |
          ./linuxdeployqt bin/ChatServer -appimage || true

      - name: Zip Linux deployment
        run: |
          zip -r release/linux-deploy.zip bin/ *.AppImage

      # Optionally, cross-compile or build Windows binaries here, or use a separate job on windows-latest

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        with:
          draft: false
          prerelease: false
          release_name: Release ${{ github.ref_name }}
          tag_name: ${{ github.ref_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Linux artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: release/linux-deploy.zip
          asset_name: linux-deploy.zip
          asset_content_type: application/zip

      # Add similar steps for Windows artifacts if you build them in this job or in a separate job